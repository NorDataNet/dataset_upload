<?php

module_load_include('inc', 'dataset_upload', 'includes/dataset_upload.validate');
module_load_include('inc', 'dataset_upload', 'includes/dataset_upload.clear');

function dataset_upload_help($path, $arg) {
  switch ($path) {
    case "admin/help#dataset_upload":
      return t("Module for uploading and validating datasets in netCDF format."); 
      break; 
  }
}

function dataset_upload_menu() {
  $items = array();

  // create dataset upload page
  $items['dataset_upload/form'] = array(
    'title' => t('Dataset upload form'),
    'page callback' => 'dataset_upload_form',
    'access arguments' => array('access content'),
    'access callback' => TRUE,
    'description' => t('Dataset uplaod and validation form'),
    'type' => MENU_CALLBACK,
  );
  // create dataset upload administrative page
  $items['admin/config/services/dataset_upload'] = array(
    'title' => 'Dataset Upload',
    'description' => 'Configuration for Dataset Upload module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dataset_upload_admin'),
    'access arguments' => array('access administration pages'),
    'file' => 'dataset_upload.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_mail().
 */
function dataset_upload_mail($key, &$message, $params) {

  if (isset($params['subject'])) {
    $message['subject'] = $params['subject'];
  }
  if (isset($params['body'])) {
    $message['body'][] = $params['body'];
  }
}


// only logged user can submit the dataset
function ask_for_login($calling_uri) {
  global $user; 
  if (!($user->uid)) {
    $dest = drupal_get_destination();
    drupal_set_message(t('You need to login or register to validate and upload your dataset'), 'error');
    drupal_goto('user/login', array('query' => $calling_uri));
  }
}

function dataset_upload_form() {
  ask_for_login(drupal_get_destination()); 
  return drupal_get_form('dataset_upload_multipage_form');
}

function dataset_upload_multipage_form($form, $form_state) {
  global $user; 
  // folder defined by the module configuration
  $folder = variable_get('dataset_upload_folder');
  // a directory will be created using the unique user id (uid)
  $uid = $user->uid;
  // file upload folder
  $file_upl_folder = $folder.'/'.$uid;

  // Display page 3 if $form_state['storage']['page_three'] is set
  if (isset($form_state['storage']['page_three'])) {
    return dataset_upload_multipage_form_page_three($form, $form_state);
  }
  // Display page 2 if $form_state['storage']['page_two'] is set
  if (isset($form_state['storage']['page_two'])) {
    return dataset_upload_multipage_form_page_two($form, $form_state);
  }

  $form = array();

  $form['creation'] = array(
    '#type' => 'markup',
    '#format' => 'html',
    '#markup' => t('Before you upload your dataset make sure you have validated it against the IOOS compliance checker. This service is provided by this portal. 
                         Your dataset will be checked against CF-1.6 and ACDD-1.3 standards. <br> If your dataset is not compliant it will not be accepted for upload 
                         and your submission will fail.'),
  );

  // users can choose to upload a single netcdf file (single_file) or a compressed file (compressed_file) containing netcdf files. 
  $form['upload_type'] = array(
    '#title' => t('Select the type of data upload you want to perform'),
    '#type' => 'radios',
    '#required' => TRUE,
    '#options' => array('single_file' => t('A single netCDF/CF file'),
                        'compressed_file' => t('A tgz, tar or zip file containing several netCDF/CF files')
                       ),
  );

  // here we just upload a nc that will have to be validated for extension "nc" and size "1.5G" 
  $form['single_file'] = array(
    '#type' => 'managed_file',
    '#title' => t('Upload your file with a .nc extension'),
    '#states'=> array('visible' => array(':input[name="upload_type"]' =>array('value' => 'single_file'),),),
    // IMPORTANT for allowing file upload: 
    // this works only when changing the /etc/php*/apache2/php.ini post_max_size and filesize in apache
    '#upload_validators' => array('file_validate_extensions' => array('nc'),
                                  'file_validate_size' => array(1500 * 1024 * 1024),),
    '#upload_location' => 'public://'.$file_upl_folder,
  );

  // here we just upload a compressed file that will have to be validated for extension "tgz", "tar" or "zip" and size "1.5G"
  $form['compressed_file'] = array(
    '#type' => 'managed_file',
    '#title' => t('Upload your compressed file with a .tgz, .tar or .zip extension'),
    '#states'=> array('visible' => array(':input[name="upload_type"]' => array('value' => 'compressed_file'),),),
    // IMPORTANT for allowing file upload: 
    // this works only when changing the /etc/php*/apache2/php.ini post_max_size and filesize in apache
    '#upload_validators' => array('file_validate_extensions' => array('tgz tar zip'),
                                  'file_validate_size' => array(1500 * 1024 * 1024),),
    //'#element_validate' => array('dataset_upload_multipage_validate_allnc'),
    '#upload_location' => 'public://'.$file_upl_folder,
  );

  // call the validation function 
  $form['#validate'][] = 'dataset_upload_multipage_p1_validate';

  // move to page two
  $form['topagetwo'] = array(
    '#type' => 'submit',
    '#value' => 'Next >>',
  );

  // clear form
  $form['clear'] = array(
    '#type' => 'submit',
    '#value' => 'Cancel Submission',
    '#submit' => array('dataset_upload_multipage_form_clear_p1'),
    '#validate' => array(),
    '#limit_validation_errors' => array(),
  );

  return $form;
}


// In page two, for the datasets which have passed the validation step, the metadata are extracted and provided in a table. 
//In addition, for multiple file upload an aggregation variable is required.
function dataset_upload_multipage_form_page_two($form, &$form_state) {

  $form['mmd_check'] = array(
    '#type' => 'fieldset',
    '#description' => 'Your uploaded file has the metadata as reported in the following table. Please make sure they are correct before
                     confirming your submission. If the metadata are not correct, cancel your submission, correct your information and proceed with a new submission.',
  );

  foreach ($form_state['metadata'] as $k => $v) {

  $form['table_title'.$k] = array(
    '#type' => 'markup',
    '#markup' => '<h3> Metadata for: "' . $k . '"</h3>',
    '#format' => 'html',
  );
    $header = array('Metadata Key', 'Metadata value');
    $rows = $v;

    $form['table_'.$k] = array(
      '#markup' => theme('table', array('header'=>$header, 'rows'=>$rows)),
    );
  }

  if (sizeof($form_state['metadata']) > 1){
    $form['aggregation'] = array(
      '#type' => 'textfield',
      '#required' => TRUE,
      '#title' => t('You have selected a multiple file upload. Your files will be aggregated on the server. <br>
                     Declare the variable on which you wish to aggregate your netcdf files. <br> 
                     This field MUST match the exact name of the variables in your netCDF files'),
    '#element_validate' => array('dataset_upload_multipage_p2_validate'),
    );
  }

  $form['topagethree'] = array(
    '#type' => 'submit',
    '#value' => 'Next>>',
  );

  $form['clear'] = array(
    '#type' => 'submit',
    '#value' => 'Cancel Submission',
    '#submit' => array('dataset_upload_multipage_form_clear_p2'),
    '#validate' => array(),
    '#limit_validation_errors' => array(),
  );

  return $form;
}

function dataset_upload_multipage_form_page_three($form, &$form_state) {

  $form['select_conf']['description'] = array(
    '#title' => t('Select the type of dataset you are uploading and the services you would like to activate for your dataset'),
    '#type' => 'radios',
    '#required' => TRUE,
    '#options' => array('gridded_data' => t('Gridded data'), 
                        'time_seriesg' => t('Time series gridded data'),
                        'time_series' => t('Time series not gridded data')),
  );


  // here we just upload a tgz that will have to be uncompressed and validated. 
  $form['select_conf']['gridded_data'] = array(
    '#title' => t('Services'),
    '#type' => 'checkboxes',
    '#options' => array('https' => t('Download of dataset (http(s))'), 
                        'opendap' => t('OPeNDAP (Remote access)'),
                        'wms' => t('WMS client (Web Map Server)')
                  ),
    '#default_value' => array('https', 'opendap', 'wms'),
    '#states'=> array(
    'visible' => array(
        ':input[name="description"]' =>array('value' => 'gridded_data'),
                 ),
                 ),
  );

  $form['select_conf']['time_seriesg'] = array(
    '#title' => t('Services'),
    '#type' => 'checkboxes',
    '#options' => array('https' => t('Download of dataset (http(s))'), 
                        'opendap' => t('OPeNDAP (Remote access)'),
                        'wms' => t('WMS client (Web Map Server)')
                  ),
    '#default_value' => array('https', 'opendap', 'wms'),
    '#states'=> array(
    'visible' => array(
        ':input[name="description"]' =>array('value' => 'time_seriesg'),
                 ),
                 ),
  );

  $form['select_conf']['time_series'] = array(
    '#title' => t('Services'),
    '#type' => 'checkboxes',
    '#options' => array('https' => t('Download of dataset (http(s))'), 
                        'opendap' => t('OPeNDAP (Remote access)')
                  ),
    //'#attributes' => array('checked' => 'unchecked'),
    '#default_value' => array('https', 'opendap'),
    '#states'=> array(
    'visible' => array(
        ':input[name="description"]' =>array('value' => 'time_series'),
                 ),
                 ),
  );

  $form['done'] = array(
    '#type' => 'submit',
    '#value' => 'Confirm',
  );

  $form['clear'] = array(
    '#type' => 'submit',
    '#value' => 'Cancel Submission',
    '#submit' => array('dataset_upload_multipage_form_clear_p3'),
    '#validate' => array(),
    '#limit_validation_errors' => array(),
  );

  return $form;
}

function dataset_upload_multipage_form_submit(&$form, &$form_state) {
  global $user;
  
  // Handle page 1 submissions: select files & next, trigger validation
  if ($form_state['clicked_button']['#id'] == 'edit-topagetwo') {

    $form_state['storage']['page_two'] = TRUE;  //it will load page two
    $form_state['storage']['page_one_values'] = $form_state['values']; //it will store page one value
    $form_state['rebuild'] = TRUE;   // Added

  // Handle page 2 submissions: review of metadata & next
  }elseif ($form_state['clicked_button']['#id'] == 'edit-topagethree'){

    $form_state['storage']['page_two'] = FALSE; 
    $form_state['storage']['page_three'] = TRUE; 
    $form_state['storage']['page_two_values'] = $form_state['values'];
    $form_state['rebuild'] = TRUE;   // Added

    if (!empty($form_state['storage']['page_two_values']['aggregation'])){
       $ncml_content = '<netcdf xmlns="http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2">';
       $ncml_content .= "\n";
       $ncml_content .= '<aggregation dimName="'.$form_state['storage']['page_two_values']['aggregation'].'" type="joinExisting">';
       $ncml_content .= "\n";
       $ncml_content .= '<scan location="." suffix=".nc" />';
       $ncml_content .= "\n";
       $ncml_content .= '</aggregation>';
       $ncml_content .= "\n";
       $ncml_content .= '</netcdf>';
       $ncml_content .= "\n";
       $ncml_file = $form_state['dataset_dir'] . '/'. substr($form_state['dataset_file']->filename, 0, -4). '.ncml' ;
       file_save_data($ncml_content, $ncml_file, FILE_EXISTS_REPLACE);
    }

  }else {

    // Handle page 3 submissions: select services & done
    //save configuration file 
    $dataset_type = $form_state['values']['description'];
    $selected_checkboxes = $form_state['values'][$dataset_type];
  
    if ($selected_checkboxes['https'] !== 0 ){
       $contents = '<thredds:service name="file" serviceType="HTTPServer" base="/opendap/hyrax/">';
       $contents .= "\n";
    }
    if ($selected_checkboxes['opendap'] !== 0 ){
       $contents .= '<thredds:service name="dap" serviceType="OPeNDAP" base="/opendap/hyrax/">';
       $contents .= "\n";
    }
    if ($selected_checkboxes['wms'] !== 0 ){
       $contents .= '<thredds:service name="wms" serviceType="WMS" base="https://ns9530k.ncwms.sigma2.no/ncWMS2/wms">';
       $contents .= "\n";
    }
    $existing = $form_state['dataset_dir'] . '/'. explode(".",$form_state['dataset_file']->filename)[0] . '.cfg' ;
    file_save_data($contents, $existing, FILE_EXISTS_REPLACE);
  
    $module = 'dataset_upload';
    $key = 'dataset_upload_complete';

    //$email_to = variable_get('site_mail', '');
    $email_to = $user->mail;
    $from = variable_get('site_mail', '');

    $params = array(
	    'body' => 'Your dataset has been uploaded on NorDataNet. The dataset will be delivered to NIRD, uploaded into the archive and a DOI will be given. When your dataset will be ready you will be notified. <br> Thank you for submitting your dataset through NorDataNet!<br> The NorDataNet team.',
      'subject' => 'Dataset upload on NordataNet',
    );

    $language = language_default();
    $send = TRUE;
    $result = drupal_mail($module, $key, $email_to, $language, $params, $from, $send);
    if ($result['result'] == TRUE) {
      drupal_set_message(t('A message has been sent to your email: '.$user->mail));
    }
    else {
      drupal_set_message(t('There was a problem sending your message and it was not sent.'), 'error');
    }

    drupal_set_message(t('Your dataset and related info have been submitted.'),'status');
    $form_state['redirect'] = 'dataset_upload/form'; // Redirects the user.
    unset ($form_state['storage']); 
  }

}

/**
 * Returns what to show on the completion page.
 */
function dataset_upload_complete() {
  return 'Thank you for submitting your dataset';
}
